# Reusable workflow for building the community project

name: Unity Build & Test Reusable Workflow

on: 
  workflow_call:
    inputs:
      target-platform:
        required: true
        type: string
        description: A valid Unity target platform identifier
      os:
        required: true
        description: A valid GitHub runner operation system identifier
        type: string
      unity-version: 
        required: false
        description: A valid Game CI Unity version identifier, defaults to 2021.3.9f1
        default: 2021.3.9f1
        type: string
      project-path:
        required: true
        description: Path that points to the Unity project
        type: string
      custom-parameters:
        required: false
        default: ''
        description: Additional parameters to pass to Unity for building
        type: string
      do-test:
        required: false
        description: Whether to execute tests or not, defaults to false
        default: false
        type: boolean
    secrets:
      UNITY_EMAIL: 
        required: true
      UNITY_PASSWORD:
        required: true
      UNITY_SERIAL: 
        required: false
        description: Set the serial to use a professional license for building
      UNITY_LICENSE:
        required: false
        description: Set the license to use a personal license for building
  
jobs: 
  test:
    name: Test for ${{ inputs.target-platform }}
    runs-on: ${{ inputs.os }}
    # Game CI does not support MacOS yet for executing the tests
    if: ${{ inputs.do-test && !startsWith(inputs.os, 'macos-') }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: ./.github/actions/unity-cache
        with:
          project-path: ${{ inputs.project-path }}
          unity-version: ${{ inputs.unity-version }}
          target-platform: ${{ inputs.target-platform }}
      - uses: game-ci/unity-test-runner@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }} 
        with:
          projectPath: ${{ inputs.project-path }}
          unityVersion: ${{ inputs.unity-version }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}

  manifest:
    name: Generate build manifest json
    runs-on: ubuntu-latest
    outputs:
      content: ${{ steps.manifest.outputs.content }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: ./.github/actions/build-manifest
        id: manifest
      
  contributors:
    name: Generate contributors json
    runs-on: ubuntu-latest
    outputs:
      content: ${{ steps.contributors.outputs.content }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: ./.github/actions/contributors
        id: contributors
        with: 
          github-token: ${{ secrets.GITHUB_TOKEN }}
        
  build:
    name: Build for ${{ inputs.target-platform }}
    runs-on: ${{ inputs.os }}
    needs: [manifest, contributors]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: ./.github/actions/unity-cache
        with:
          projectPath: ${{ inputs.project-path }}
          unityVersion: ${{ inputs.unity-version }}
          targetPlatform: ${{ inputs.target-platform }}
      - name: write manifest.json
        uses: DamianReeves/write-file-action@master
        with:
         path: ${{ inputs.project-path }}/Assets/_Game/Build/manifest.json
         write-mode: overwrite
         contents: ${{ needs.manifest.outputs.content }}
      - name: write contributors.json
        uses: DamianReeves/write-file-action@master
        with:
         path: ${{ inputs.project-path }}/Assets/_Game/Build/contributors.json
         write-mode: overwrite
         contents: ${{ needs.contributors.outputs.content }}
      - name: Commit manifest & contributors changes
        uses: EndBug/add-and-commit@v9
        with:
          push: false
      - uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: ${{ inputs.project-path }}
          unityVersion: ${{ inputs.unity-version }}
          targetPlatform: ${{ inputs.target-platform }}
          versioning: Semantic
          buildName: CommunityProject
      - uses: actions/upload-artifact@v2
        with:
          name: Build-${{ github.run_id }}-${{ inputs.target-platform }}
          path: build/${{ inputs.target-platform }}
          if-no-files-found: error
    